# Egress exceptions for ipad
declare -a IPAD_TCP="(25,43,110,143,465,587,993)"
declare -a IPAD_UDP="()"
declare -a IPAD_ICMP="(echo-request echo-reply destination-unreachable source-quench)"
declare -a IPAD_ICMP6="(destination-unreachable packet-too-big time-exceeded \
parameter-problem echo-request echo-reply router-solicitation router-advertisement \
neighbour-solicitation neighbour-advertisement redirect 141 142 148 149)"
IPAD_ADDR="192.168.20.4/32"
IPAD_ADDR6="2001:470:bbde:a264::/64"
IPAD_IF="eth1.20"
CHAIN="IPAD"
function ipad {
    # Create new chain
    "${IPTABLES}" -N "${CHAIN}"
    # TCP
    for tcp in "${IPAD_TCP[@]}"
    do
        "${IPTABLES}" -A "${CHAIN}" -i "${IPAD_IF}" -o "${EXTIF}" -s "${IPAD_ADDR}" -p tcp -m multiport --dports "${tcp}" -m state --state NEW -j ACCEPT
    done
    unset tcp
    # UDP
    for udp in "${IPAD_UDP[@]}"
    do
        "${IPTABLES}" -A "${CHAIN}" -i "${IPAD_IF}" -o "${EXTIF}" -s "${IPAD_ADDR}" -p udp -m multiport --dports "${udp}" -j ACCEPT
        "${IPTABLES}" -A "${CHAIN}" -o "${IPAD_IF}" -i "${EXTIF}" -d "${IPAD_ADDR}" -p udp -m multiport --sports "${udp}" -j ACCEPT
    done
    unset udp
    # ICMP
    for icmp in "${IPAD_ICMP[@]}"
    do
        "${IPTABLES}" -A "${CHAIN}" -i "${IPAD_IF}" -o "${EXTIF}" -s "${IPAD_ADDR}" -p icmp --icmp-type "${icmp}" -j ACCEPT
        "${IPTABLES}" -A "${CHAIN}" -o "${IPAD_IF}" -i "${EXTIF}" -d "${IPAD_ADDR}" -p icmp --icmp-type "${icmp}" -j ACCEPT
    done
    unset icmp
    # Return to the default FORWARD chain
    "${IPTABLES}" -A "${CHAIN}" -j RETURN
    # Append VLAN chain to the FORWARD table
    "${IPTABLES}" -A FORWARD -j "${CHAIN}"
    # Unset variables
}
function ipv6_ipad {
    # Create new chain
    "${IP6TABLES}" -N "${CHAIN}"
    # TCP
    for tcp in "${IPAD_TCP[@]}"
    do
        "${IP6TABLES}" -A "${CHAIN}" -i "${IPAD_IF}" -o "${IPV6_EXTIF}" -s "${IPAD_ADDR6}" -p tcp -m multiport --dports "${tcp}" -m state --state NEW -j ACCEPT
    done
    unset tcp
    # UDP
    for udp in "${IPAD_UDP[@]}"
    do
        "${IP6TABLES}" -A "${CHAIN}" -i "${IPAD_IF}" -o "${IPV6_EXTIF}" -s "${IPAD_ADDR6}" -p udp -m multiport --dports "${udp}" -j ACCEPT
        "${IP6TABLES}" -A "${CHAIN}" -o "${IPAD_IF}" -i "${IPV6_EXTIF}" -d "${IPAD_ADDR6}" -p udp -m multiport --sports "${udp}" -j ACCEPT
    done
    unset udp
    # ICMP
    for icmpv6 in "${IPAD_ICMP6[@]}"
    do
        "${IP6TABLES}" -A "${CHAIN}" -i "${IPAD_IF}" -o "${IPV6_EXTIF}" -s "${IPAD_ADDR6}" -p icmpv6 --icmpv6-type "${icmpv6}" -j ACCEPT
        "${IP6TABLES}" -A "${CHAIN}" -o "${IPAD_IF}" -i "${IPV6_EXTIF}" -d "${IPAD_ADDR6}" -p icmpv6 --icmpv6-type "${icmpv6}" -j ACCEPT
    done
    unset icmpv6
    # Return to the default FORWARD chain
    "${IP6TABLES}" -A "${CHAIN}" -j RETURN
    # Append VLAN chain to the FORWARD table
    "${IP6TABLES}" -A FORWARD -j "${CHAIN}"
    # Unset variables
}
ipad
if [ "${IPV6}" -eq 1 ]
then
    ipv6_ipad
    # Unset variables
    unset IPAD_ICMP6 IPAD_ADDR6
fi
# Unset variables
unset IPAD_TCP IPAD_UDP IPAD_ICMP IPAD_ADDR IPAD_IF CHAIN
