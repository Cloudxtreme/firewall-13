## Egress exceptions for ids01
#declare -a IDS01_TCP="(25 43)"
#declare -a IDS01_UDP="()"
#declare -a IDS01_ICMP="(echo-request echo-reply destination-unreachable source-quench)"
#declare -a IDS01_ICMP6="(destination-unreachable packet-too-big time-exceeded \
#parameter-problem echo-request echo-reply router-solicitation router-advertisement \
#neighbour-solicitation neighbour-advertisement redirect 141 142 148 149)"
#IDS01_ADDR="192.168.10.6/32"
#IDS01_ADDR6="2001:470:bbde:a20a:201:c0ff:fe06:ba60/128"
#IDS01_IF="eth1.10"
#CHAIN="IDS01"
#function ids01 {
#    # Create new chain
#    "${IPTABLES}" -N "${CHAIN}"
#    # TCP
#    for tcp in "${IDS01_TCP[@]}"
#    do
#        "${IPTABLES}" -A "${CHAIN}" -s "${IDS01_ADDR}" -p tcp --dport "${tcp}" -m state --state NEW -j ACCEPT
#        "${IPTABLES}" -A INPUT -i "${IDS01_IF}" -s "${IDS01_ADDR}" -p tcp --dport "${tcp}" -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
#    "${IPTABLES}" -A OUTPUT -o "${IDS01_IF}" -d "${IDS01_ADDR}" -p tcp --sport "${tcp}" -m state --state ESTABLISHED,RELATED -j ACCEPT
#    done
#    unset tcp
#    # UDP
#    for udp in "${IDS01_UDP[@]}"
#    do
#        "${IPTABLES}" -A "${CHAIN}" -s "${IDS01_ADDR}" -p udp --dport "${udp}" -j ACCEPT
#        "${IPTABLES}" -A "${CHAIN}" -d "${IDS01_ADDR}" -p udp --sport "${udp}" -j ACCEPT
#        "${IPTABLES}" -A INPUT -i "${IDS01_IF}" -s "${IDS01_ADDR}" -p udp --dport "${udp}" -j ACCEPT
#        "${IPTABLES}" -A OUTPUT -o "${IDS01_IF}" -d "${IDS01_ADDR}" -p udp --sport "${udp}" -j ACCEPT
#    done
#    unset udp
#    # ICMP
#    for icmp in "${IDS01_ICMP[@]}"
#    do
#        "${IPTABLES}" -A "${CHAIN}" -s "${IDS01_ADDR}" -p icmp --icmp-type "${icmp}" -j ACCEPT
#        "${IPTABLES}" -A "${CHAIN}" -d "${IDS01_ADDR}" -p icmp --icmp-type "${icmp}" -j ACCEPT
#    done
#    unset icmp
#    # Return to the default FORWARD chain
#    "${IPTABLES}" -A "${CHAIN}" -j RETURN
#    # Append VLAN chain to the FORWARD table
#    "${IPTABLES}" -A FORWARD -j "${CHAIN}"
#    # Unset variables
#}
#function ipv6_ids01 {
#    # Create new chain
#    "${IP6TABLES}" -N "${CHAIN}"
#    # TCP
#    for tcp in "${IDS01_TCP[@]}"
#    do
#        "${IP6TABLES}" -A "${CHAIN}" -s "${IDS01_ADDR6}" -p tcp --dport "${tcp}" -m state --state NEW -j ACCEPT
#        "${IP6TABLES}" -A INPUT -i "${IDS01_IF}" -s "${IDS01_ADDR6}" -p tcp --dport "${tcp}" -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT
#        "${IP6TABLES}" -A OUTPUT -o "${IDS01_IF}" -d "${IDS01_ADDR6}" -p tcp --sport "${tcp}" -m state --state ESTABLISHED,RELATED -j ACCEPT
#    done
#    unset tcp
#    # UDP
#    for udp in "${IDS01_UDP[@]}"
#    do
#        "${IP6TABLES}" -A "${CHAIN}" -s "${IDS01_ADDR6}" -p udp --dport "${udp}" -j ACCEPT
#        "${IP6TABLES}" -A INPUT -i "${IDS01_IF}" -s "${IDS01_ADDR6}" -p udp --dport "${udp}" -j ACCEPT
#        "${IP6TABLES}" -A "${CHAIN}" -d "${IDS01_ADDR6}" -p udp --sport "${udp}" -j ACCEPT
#        "${IP6TABLES}" -A OUTPUT -o "${IDS01_IF}" -d "${IDS01_ADDR6}" -p udp --sport "${udp}" -j ACCEPT
#    done
#    unset udp
#    # ICMP
#    for icmpv6 in "${IDS01_ICMP6[@]}"
#    do
#        "${IP6TABLES}" -A "${CHAIN}" -s "${IDS01_ADDR6}" -p icmpv6 --icmpv6-type "${icmpv6}" -j ACCEPT
#        "${IP6TABLES}" -A "${CHAIN}" -d "${IDS01_ADDR6}" -p icmpv6 --icmpv6-type "${icmpv6}" -j ACCEPT
#    done
#    unset icmpv6
#    # Return to the default FORWARD chain
#    "${IP6TABLES}" -A "${CHAIN}" -j RETURN
#    # Append VLAN chain to the FORWARD table
#    "${IP6TABLES}" -A FORWARD -j "${CHAIN}"
#    # Unset variables
#}
#ids01
#if [ "${IPV6}" -eq 1 ]
#then
#    ipv6_ids01
#    # Unset variables
#    unset IDS01_ICMP6 IDS01_ADDR6
#fi
## Unset variables
#unset IDS01_TCP IDS01_UDP IDS01_ICMP IDS01_ADDR IDS01_IF CHAIN
